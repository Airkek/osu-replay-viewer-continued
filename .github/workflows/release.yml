name: Build and Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest]
        config: [Debug, Release]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET 8
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.x

      - name: Determine runtime
        id: set-runtime
        shell: bash
        run: |
          if [ "${{ runner.os }}" == "Windows" ]; then
            echo "runtime=win-x64" >> $GITHUB_OUTPUT
          else
            echo "runtime=linux-x64" >> $GITHUB_OUTPUT
          fi

      - name: Restore dependencies
        run: dotnet restore

      - name: Build and Publish
        run: |
          dotnet publish -c ${{ matrix.config }} -r ${{ steps.set-runtime.outputs.runtime }} --self-contained true -o publish

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-${{ runner.os }}-${{ matrix.config }}-${{ steps.set-runtime.outputs.runtime }}
          path: publish/

  create-release:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Prepare release assets
        run: |
          mkdir -p release-assets
          for dir in artifacts/*/; do
            dir_name=$(basename "$dir")
            if [[ "$dir_name" == *Windows* ]]; then
              (cd "$dir" && zip -r "../../release-assets/${dir_name}.zip" .)
            else
              tar -czf "release-assets/${dir_name}.tar.gz" -C "$dir" .
            fi
          done

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          generate_release_notes: true
          draft: false
          prerelease: false
          files: |
            release-assets/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}